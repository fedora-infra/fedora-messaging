[tox]
envlist = lint,format,licenses,{py27,py34,py35,py36,py37}-pika{012,1}-unittest, {py27,py34,py35,py36,py37}-pika{012,1}-integration

[testenv]
passenv = CI TRAVIS TRAVIS_*
deps =
    pika012: pika==0.12
    pika1: git+https://github.com/pika/pika.git
    -rdev-requirements.txt
sitepackages = False
whitelist_externals =
    rm
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs}

[testenv:py27-pika1-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py34-pika1-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py35-pika1-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py36-pika1-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py37-pika1-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py27-pika012-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py34-pika012-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py35-pika012-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py36-pika012-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:py37-pika012-integration]
commands =
    rm -rf htmlcov coverage.xml
    pytest -vv --cov-config .coveragerc --cov=fedora_messaging --cov-report term \
        --cov-report xml --cov-report html {posargs} fedora_messaging/tests/integration

[testenv:docs]
changedir = docs
whitelist_externals =
    mkdir
    rm
commands=
    mkdir -p _static
    rm -rf _build
    sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html
    sphinx-build -W -b man -d {envtmpdir}/doctrees .  _build/man

[testenv:lint]
deps =
    flake8 > 3.0
commands =
    python -m flake8 {posargs}

[testenv:format]
deps =
    black
commands =
    python -m black --check {posargs:.}

[testenv:licenses]
deps =
    liccheck
commands =
    liccheck -s .license_strategy.ini

[flake8]
show-source = True
max-line-length = 100
ignore = E203,W503
exclude = .git,.tox,dist,*egg

[pytest]
testpaths = fedora_messaging/tests/unit/
